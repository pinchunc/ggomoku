\name{gomoku_winner}
\alias{gomoku_winner}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
Maps the gomoku_wunner function across the rows, columns, and diagnonals of the Gomoku board to find a winner.
}
\description{
This function is not called directly. It is called within gomoku_victory() and is designed to be mapped to the rows, columns, and diagonals of the matrix generated by gomoku_play(). Using the rle() function it seeks out an instance in which either player has gotten 5 of their own tiles in a row, then stores this player's name (either "black" or "white") into a variable which is then returned.
}
\usage{
gomoku_winner(rle_output)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{rle_output}{
Within the gomoku_victory() function, the lapply() function is called to operate on the rows, columns, and diagonals of the board matrix, generating a list of rle objects. rle_output is that list.
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
Pin-Chun Chen & J Steven Raquel
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
## The function is currently defined as
gomoku_winner <- function(rle_output) {
    if (5 %in% rle_output$lengths) {
        winner_list <- rle_output$values[which(rle_output$lengths == 5)]}
    else {winner_list <- NA}
  return(winner_list)
}

% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory (show via RShowDoc("KEYWORDS")):
% \keyword{ ~kwd1 }
% \keyword{ ~kwd2 }
% Use only one keyword per line.
% For non-standard keywords, use \concept instead of \keyword:
% \concept{ ~cpt1 }
% \concept{ ~cpt2 }
% Use only one concept per line.
